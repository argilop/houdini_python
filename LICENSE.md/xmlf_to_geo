import os,hou,random

def create_object_merge():
    #get geo path
    my_geo = hou.node("/obj").createNode("geo", "geo_merge")
    for c in hou.node("/obj/"+str(my_geo)).children():
            c.destroy()
    my_switch = hou.node("/obj/"+str(my_geo)).createNode("switch","switch1")
 
    parent = hou.selectedNodes()
    count =0
    my_list = []
    for c in parent[0].children():
        my_list.append(c)
 
    my_rand = random.sample(my_list,len(my_list))
 
    for child in my_rand:
        if "_GEO" in child.name():
            count+= 1
            objmerge_path = child.path()
            new_object = hou.node("/obj/"+str(my_geo)).createNode("object_merge","object_merge_"+str(child.name()))
            hou.node("/obj/"+str(my_geo)+"/"+str(new_object)).parm("objpath1").set(objmerge_path)
            hou.node("/obj/"+str(my_geo)+"/"+str(new_object)).parm("xformtype").set(1)
            sphere = hou.node("/obj/"+str(my_geo)).createNode("sphere","center"+str(child.name()))
            add = hou.node("/obj/"+str(my_geo)).createNode("add","point"+str(child.name()))
            hou.node("/obj/"+str(my_geo)+"/"+str(add)).parm("keep").set(1)
            transform = hou.node("/obj/"+str(my_geo)).createNode("xform","move_up_"+str(child.name()))
            hou.node("/obj/"+str(my_geo)+"/"+str(transform)).parm("ty").set(260.7)


            hou.node("/obj/"+str(my_geo)+"/"+str(sphere)).setNextInput(new_object)
            hou.node("/obj/"+str(my_geo)+"/"+str(add)).setNextInput(sphere)
            hou.node("/obj/"+str(my_geo)+"/"+str(transform)).setNextInput(add)
            hou.node("/obj/"+str(my_geo)+"/"+str(my_switch)).setNextInput(transform)
            #print objmerge_path
 
            hou.node("/obj/"+str(my_geo)+"/"+str(my_switch)).parm("input").setExpression("int(($FF/5))%"+str(count))
 
 
 
create_object_merge()
